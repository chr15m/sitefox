# Lifted from github.com/squint-cljs/cherry

name: Tests

on: [push, pull_request]

env:
  SECRET: testing
  TESTING: 1
  DATABASE_URL: sqlite://./tests.sqlite
  PORT: 8000

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # windows-latest
        version: [16, 18, 20]

    runs-on: ${{ matrix.os }}

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v4

    - name: Set up node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.version }}

    - name: Prepare java
      uses: actions/setup-java@v4
      with:
        distribution: "adopt"
        java-version: 11

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@9.5
      with:
        cli: 1.10.3.1040

    - name: Cache clojure dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        # List all files containing dependencies:
        key: cljdeps-${{ hashFiles('shadow-cljs.edn') }}
        # key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
        # key: cljdeps-${{ hashFiles('project.clj') }}
        # key: cljdeps-${{ hashFiles('build.boot') }}
        restore-keys: cljdeps-

    - name: Install Node deps
      run: npm i

    # Main test suite

    - name: Run the tests
      run: npm run test

    - name: Run the e2e tests
      run: npm run test-e2e

   # Test suite with PostgreSQL as a db

    - name: Set up PostgreSQL
      run: |
        sudo apt update
        sudo apt install -y postgresql libpq-dev
        sudo service postgresql start
        sudo -u postgres createuser --superuser "$USER"
      if: runner.os == 'Linux'

    - name: Run the tests on Postgres
      run: npm run test-postgres
      if: runner.os == 'Linux'

    # npm init "create" script tests

    - name: Link local packages for create tests
      run: npm link

    - name: Create temporary directory for create tests
      run: mkdir test-create-scripts

    - name: Test npm create sitefox-fullstack
      working-directory: ./test-create-scripts
      run: |
        set -e
        # Use absolute path for npm create as we are in a different working dir
        npm create sitefox-fullstack test-fullstack-app --prefix ../
        cd test-fullstack-app
        npm install
        make watch &
        if timeout 30 bash -c 'until echo > /dev/tcp/localhost/$PORT; do echo -n "."; sleep 1; done 2>/dev/null'; then
          echo "Server started successfully."
        else
          echo "Server failed to start within 30 seconds."
          exit 1 # Exit with error if server fails to start
        fi
        killall node java || true # Allow failure if processes not found

    - name: Test npm create sitefox-nbb
      working-directory: ./test-create-scripts
      run: |
        set -e
        # Use absolute path for npm create as we are in a different working dir
        npm create sitefox-nbb test-nbb-app --prefix ../
        cd test-nbb-app
        npm install
        npm run serve &
        if timeout 30 bash -c 'until echo > /dev/tcp/localhost/$PORT; do echo -n "."; sleep 1; done 2>/dev/null'; then
          echo "Server started successfully."
        else
          echo "Server failed to start within 30 seconds."
          exit 1 # Exit with error if server fails to start
        fi
        killall node || true # Allow failure if process not found
